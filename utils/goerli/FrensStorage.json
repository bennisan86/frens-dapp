{
  "address": "0xB003C1756B0e6dDDC360372C7183B25D296CCCE3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "GuardianChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addUint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnKeys",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "deleteAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "deleteBool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "deleteUint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "r",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "r",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "setBool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "setGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setUint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "subUint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x72b6e191b5bc9c8ccf163e3cd6e446655cc20c1303474fba13dfaaa9f0e26240",
  "receipt": {
    "to": null,
    "from": "0x6C55105954b7fd0c4Bf3df00dFD739fA71e2fD20",
    "contractAddress": "0xB003C1756B0e6dDDC360372C7183B25D296CCCE3",
    "transactionIndex": 68,
    "gasUsed": "411739",
    "logsBloom": "0x
    "blockHash": "0x1de4d87946a80d9fc189d812528258facb2c1125fc4417d218571e56efb48693",
    "transactionHash": "0x72b6e191b5bc9c8ccf163e3cd6e446655cc20c1303474fba13dfaaa9f0e26240",
    "logs": [],
    "blockNumber": 9047974,
    "cumulativeGasUsed": "16113347",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "6a508fa8ccd1311f47bcdbf3960351a5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"GuardianChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"subUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addUint(bytes32,uint256)\":{\"params\":{\"_amount\":\"An amount to add to the record's value  - 0xWildhare removed safeMath\",\"_key\":\"The key for the record\"}},\"constructor\":{\"details\":\"Construct FrensStorage\"},\"deleteAddress(bytes32)\":{\"params\":{\"_key\":\"The key for the record\"}},\"deleteBool(bytes32)\":{\"params\":{\"_key\":\"The key for the record\"}},\"deleteUint(bytes32)\":{\"params\":{\"_key\":\"The key for the record - added for Frens ~ 0xWildhare\"}},\"getAddress(bytes32)\":{\"params\":{\"_key\":\"The key for the record\"}},\"getBool(bytes32)\":{\"params\":{\"_key\":\"The key for the record\"}},\"getUint(bytes32)\":{\"params\":{\"_key\":\"The key for the record\"}},\"setAddress(bytes32,address)\":{\"params\":{\"_key\":\"The key for the record\"}},\"setBool(bytes32,bool)\":{\"params\":{\"_key\":\"The key for the record\"}},\"setUint(bytes32,uint256)\":{\"params\":{\"_key\":\"The key for the record\"}},\"subUint(bytes32,uint256)\":{\"params\":{\"_amount\":\"An amount to subtract from the record's value - 0xWildhare removed safeMath\",\"_key\":\"The key for the record\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrensStorage.sol\":\"FrensStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/FrensStorage.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n\\n/// @title The primary persistent storage for Frens Staking Pools\\n/// @author modified 04-Dec-2022 by 0xWildhare originally by David Rugendyke (h/t David and Rocket Pool!)\\n/// @dev this code is modified from the Rocket Pool RocketStorage contract all \\\"Rocket\\\" replaced with \\\"Frens\\\" - everything not used by frens has beed removed.\\n\\nimport \\\"./interfaces/IFrensStorage.sol\\\";\\n\\ncontract FrensStorage is IFrensStorage{\\n\\n    // Events\\n    event GuardianChanged(address oldGuardian, address newGuardian);\\n\\n     // Storage maps\\n    \\n    mapping(bytes32 => uint256)    private uintStorage;\\n    mapping(bytes32 => address)    private addressStorage;\\n    mapping(bytes32 => bool)       private booleanStorage;\\n    \\n    \\n    // Guardian address\\n    address guardian;\\n    address newGuardian;\\n\\n    /**\\n    * @dev Throws if called by any account other than a guardian account (temporary account allowed access to settings before DAO is fully enabled)\\n    */\\n    modifier onlyGuardian() {\\n        require(msg.sender == guardian, \\\"Account is not a guardian\\\");\\n        _;\\n    }\\n\\n\\n    /// @dev Construct FrensStorage\\n    constructor() {\\n        // Set the guardian upon deployment\\n        guardian = msg.sender;\\n    }\\n\\n    // Get guardian address\\n    function getGuardian() external override view returns (address) {\\n        return guardian;\\n    }\\n\\n    // Transfers guardianship to a new address\\n    function setGuardian(address _newAddress) external override onlyGuardian{\\n        // Store new address awaiting confirmation\\n        newGuardian = _newAddress;\\n    }\\n\\n    // Confirms change of guardian\\n    function confirmGuardian() external override {\\n        // Check tx came from new guardian address\\n        require(msg.sender == newGuardian, \\\"Confirmation must come from new guardian address\\\");\\n        // Store old guardian for event\\n        address oldGuardian = guardian;\\n        // Update guardian and clear storage\\n        guardian = newGuardian;\\n        delete newGuardian;\\n        // Emit event\\n        emit GuardianChanged(oldGuardian, guardian);\\n    }\\n\\n        // Confirms burning guardianship\\n    function burnKeys() external override onlyGuardian{\\n        // Check that new guardian has been set to zero address (are you sure?)\\n        require(address(0) == newGuardian, \\\"must set guardian to 0x00 first\\\");\\n        // Store old guardian for event\\n        address oldGuardian = guardian;\\n        // delete guardian \\n        delete guardian;\\n        // Emit event\\n        emit GuardianChanged(oldGuardian, guardian);\\n    }\\n\\n\\n    /// @param _key The key for the record\\n    function getAddress(bytes32 _key) override external view returns (address r) {\\n        return addressStorage[_key];\\n    }\\n\\n    /// @param _key The key for the record\\n    function getUint(bytes32 _key) override external view returns (uint256 r) {\\n        return uintStorage[_key];\\n    }\\n\\n    /// @param _key The key for the record\\n    function getBool(bytes32 _key) override external view returns (bool r) {\\n        return booleanStorage[_key];\\n    }\\n\\n\\n    /// @param _key The key for the record\\n    function setAddress(bytes32 _key, address _value) onlyGuardian override external {\\n        addressStorage[_key] = _value;\\n    }\\n/*\\n    /// @param _key The key for the record\\n    function setAddress(string memory _key, address _value) external {\\n        bytes32 key = keccak256(abi.encodePacked(_key, msg.sender));\\n        addressStorage[key] = _value;\\n    }\\n*/\\n    /// @param _key The key for the record\\n    function setUint(bytes32 _key, uint _value) onlyGuardian override external {\\n        uintStorage[_key] = _value;\\n    }\\n\\n   \\n    /// @param _key The key for the record\\n    function setBool(bytes32 _key, bool _value) onlyGuardian override external {\\n        booleanStorage[_key] = _value;\\n    }\\n\\n\\n\\n    /// @param _key The key for the record\\n    function deleteAddress(bytes32 _key) onlyGuardian override external {\\n        delete addressStorage[_key];\\n    }\\n\\n    /// @param _key The key for the record - added for Frens ~ 0xWildhare\\n    function deleteUint(bytes32 _key) onlyGuardian override external {\\n        delete uintStorage[_key];\\n    }\\n\\n    /// @param _key The key for the record\\n    function deleteBool(bytes32 _key) onlyGuardian override external {\\n        delete booleanStorage[_key];\\n    }\\n\\n   \\n\\n    /// @param _key The key for the record\\n    /// @param _amount An amount to add to the record's value  - 0xWildhare removed safeMath\\n    function addUint(bytes32 _key, uint256 _amount) onlyGuardian override external {\\n        uintStorage[_key] += _amount;\\n    }\\n\\n    /// @param _key The key for the record\\n    /// @param _amount An amount to subtract from the record's value - 0xWildhare removed safeMath\\n    function subUint(bytes32 _key, uint256 _amount) onlyGuardian override external {\\n        uintStorage[_key] -= _amount;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x5bbc0ed8ec087a81800892143e21b87351e66a7dd7fa652d5c24f922149f828e\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IFrensStorage.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\n\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n//modified from IRocketStorage on 03/12/2022 by 0xWildhare\\n\\ninterface IFrensStorage {\\n\\n   \\n    // Guardian\\n    function getGuardian() external view returns(address);\\n    function setGuardian(address _newAddress) external;\\n    function confirmGuardian() external;\\n    function burnKeys() external;\\n\\n    // Getters\\n    function getAddress(bytes32 _key) external view returns (address);\\n    function getUint(bytes32 _key) external view returns (uint);\\n    function getBool(bytes32 _key) external view returns (bool);   \\n\\n    // Setters\\n    function setAddress(bytes32 _key, address _value) external;\\n    function setUint(bytes32 _key, uint _value) external;\\n    function setBool(bytes32 _key, bool _value) external;    \\n\\n    // Deleters\\n    function deleteAddress(bytes32 _key) external;\\n    function deleteUint(bytes32 _key) external;\\n    function deleteBool(bytes32 _key) external;    \\n\\n    // Arithmetic \\n    function addUint(bytes32 _key, uint256 _amount) external;\\n    function subUint(bytes32 _key, uint256 _amount) external;\\n    \\n}\\n\",\"keccak256\":\"0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x6080806040523461002857600380546001600160a01b03191633179055610612908161002e8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630e14a376146105325780631e0ea61e1461046257806321f8a721146104305780632c62ff2d146103f357806367a6a9171461033b5780637ae1cfca1461030f5780638a0dac4a146102c7578063a75b87d21461029e578063abfdcced1461024b578063adb353dc1461020a578063bd02d0f5146101e4578063ca446dd91461018a578063e2a4853a14610153578063e2b202bf1461011d5763ebb9d8c9146100c657600080fd5b34610119576100d436610575565b91906100eb60018060a01b03600354163314610590565b84528360205282842090815492830392831161010657505551f35b634e487b7160e01b855260119052602484fd5b8280fd5b50346101195760203660031901126101195761014460018060a01b03600354163314610590565b35825281602052818181205551f35b5050346101865761016336610575565b9061017960018060a01b03600354163314610590565b8352826020528183205551f35b5080fd5b50346101195781600319360112610119576024356001600160a01b0381811692918390036101e0576101c190600354163314610590565b358352600160205281832080546001600160a01b031916909117905551f35b8480fd5b503461011957602036600319011261011957602092829135815280845220549051908152f35b50346101195761021936610575565b919061023060018060a01b03600354163314610590565b84528360205282842090815492830180931161010657505551f35b50346101195781600319360112610119576024359081151580920361029a5761027f60018060a01b03600354163314610590565b35835260026020528183209060ff8019835416911617905551f35b8380fd5b50503461018657816003193601126101865760035490516001600160a01b039091168152602090f35b50346101195760203660031901126101195780356001600160a01b03818116918290036101e0576102fd90600354163314610590565b81546001600160a01b03191617905551f35b5034610119576020366003190112610119578160209360ff923581526002855220541690519015158152f35b50346101195782600319360112610119576003546001600160a01b038082169290610367338514610590565b8154166103b057506001600160a01b0319166003558151908152602081018390527fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e967908290a151f35b606490602085519162461bcd60e51b8352820152601f60248201527f6d7573742073657420677561726469616e20746f2030783030206669727374006044820152fd5b50346101195760203660031901126101195761041a60018060a01b03600354163314610590565b3582526002602052808220805460ff1916905551f35b50346101195760203660031901126101195735825260016020908152918190205490516001600160a01b039091168152f35b50346101195782600319360112610119578054906001600160a01b0380831691338390036104d657600380546001600160a01b031980821686179092559416905583519216825260208201527fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e967908290a151f35b608490602086519162461bcd60e51b8352820152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152fd5b50346101195760203660031901126101195761055960018060a01b03600354163314610590565b358252600160205280822080546001600160a01b031916905551f35b604090600319011261058b576004359060243590565b600080fd5b1561059757565b60405162461bcd60e51b815260206004820152601960248201527f4163636f756e74206973206e6f74206120677561726469616e000000000000006044820152606490fdfea264697066735822122037b88b62a122959bcec869fd246854ee8c1d523c6374e93762ceb659768d49d364736f6c63430008100033",
  "deployedBytecode": "0x6040608081526004908136101561001557600080fd5b600091823560e01c80630e14a376146105325780631e0ea61e1461046257806321f8a721146104305780632c62ff2d146103f357806367a6a9171461033b5780637ae1cfca1461030f5780638a0dac4a146102c7578063a75b87d21461029e578063abfdcced1461024b578063adb353dc1461020a578063bd02d0f5146101e4578063ca446dd91461018a578063e2a4853a14610153578063e2b202bf1461011d5763ebb9d8c9146100c657600080fd5b34610119576100d436610575565b91906100eb60018060a01b03600354163314610590565b84528360205282842090815492830392831161010657505551f35b634e487b7160e01b855260119052602484fd5b8280fd5b50346101195760203660031901126101195761014460018060a01b03600354163314610590565b35825281602052818181205551f35b5050346101865761016336610575565b9061017960018060a01b03600354163314610590565b8352826020528183205551f35b5080fd5b50346101195781600319360112610119576024356001600160a01b0381811692918390036101e0576101c190600354163314610590565b358352600160205281832080546001600160a01b031916909117905551f35b8480fd5b503461011957602036600319011261011957602092829135815280845220549051908152f35b50346101195761021936610575565b919061023060018060a01b03600354163314610590565b84528360205282842090815492830180931161010657505551f35b50346101195781600319360112610119576024359081151580920361029a5761027f60018060a01b03600354163314610590565b35835260026020528183209060ff8019835416911617905551f35b8380fd5b50503461018657816003193601126101865760035490516001600160a01b039091168152602090f35b50346101195760203660031901126101195780356001600160a01b03818116918290036101e0576102fd90600354163314610590565b81546001600160a01b03191617905551f35b5034610119576020366003190112610119578160209360ff923581526002855220541690519015158152f35b50346101195782600319360112610119576003546001600160a01b038082169290610367338514610590565b8154166103b057506001600160a01b0319166003558151908152602081018390527fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e967908290a151f35b606490602085519162461bcd60e51b8352820152601f60248201527f6d7573742073657420677561726469616e20746f2030783030206669727374006044820152fd5b50346101195760203660031901126101195761041a60018060a01b03600354163314610590565b3582526002602052808220805460ff1916905551f35b50346101195760203660031901126101195735825260016020908152918190205490516001600160a01b039091168152f35b50346101195782600319360112610119578054906001600160a01b0380831691338390036104d657600380546001600160a01b031980821686179092559416905583519216825260208201527fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e967908290a151f35b608490602086519162461bcd60e51b8352820152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152fd5b50346101195760203660031901126101195761055960018060a01b03600354163314610590565b358252600160205280822080546001600160a01b031916905551f35b604090600319011261058b576004359060243590565b600080fd5b1561059757565b60405162461bcd60e51b815260206004820152601960248201527f4163636f756e74206973206e6f74206120677561726469616e000000000000006044820152606490fdfea264697066735822122037b88b62a122959bcec869fd246854ee8c1d523c6374e93762ceb659768d49d364736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addUint(bytes32,uint256)": {
        "params": {
          "_amount": "An amount to add to the record's value  - 0xWildhare removed safeMath",
          "_key": "The key for the record"
        }
      },
      "constructor": {
        "details": "Construct FrensStorage"
      },
      "deleteAddress(bytes32)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "deleteBool(bytes32)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "deleteUint(bytes32)": {
        "params": {
          "_key": "The key for the record - added for Frens ~ 0xWildhare"
        }
      },
      "getAddress(bytes32)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "getBool(bytes32)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "getUint(bytes32)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "setAddress(bytes32,address)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "setBool(bytes32,bool)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "setUint(bytes32,uint256)": {
        "params": {
          "_key": "The key for the record"
        }
      },
      "subUint(bytes32,uint256)": {
        "params": {
          "_amount": "An amount to subtract from the record's value - 0xWildhare removed safeMath",
          "_key": "The key for the record"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4729,
        "contract": "contracts/FrensStorage.sol:FrensStorage",
        "label": "uintStorage",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 4733,
        "contract": "contracts/FrensStorage.sol:FrensStorage",
        "label": "addressStorage",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 4737,
        "contract": "contracts/FrensStorage.sol:FrensStorage",
        "label": "booleanStorage",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 4739,
        "contract": "contracts/FrensStorage.sol:FrensStorage",
        "label": "guardian",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4741,
        "contract": "contracts/FrensStorage.sol:FrensStorage",
        "label": "newGuardian",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}